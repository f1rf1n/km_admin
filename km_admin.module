<?php

/**
 * @file
 * Functions used by KM Admin tools.
 */


use Drupal\file\Entity\File;


/**
 * Batch operation to match images to their products: hundred at a time.
 * This is the function that is called on each operation in image_match_batch.
 */
function image_match_op($file, &$context) {
  // Process the file, create it in DB.
  $imgFile = File::Create(['uri' => $file->uri]);
  $imgFile->save();

  // Get the products by their field_ean value.
  $product_storage = \Drupal::entityTypeManager()->getStorage('commerce_product');
  $query = \Drupal::entityQuery('commerce_product')
    ->condition('type', 'default')
    ->condition('field_ean', $file->name);
  $pids = $query->execute();
  $products = $product_storage->loadMultiple($pids);

  $feedback = '';
  // And set their imagefields
  foreach ($products as $product) {
    $product->field_image = $imgFile;
    $product->save();
//    ksm($product, 'product in ');
    $feedback .= ' '. $product->id();
  }
  // Save some (for) feedback. Available as $results in the 'finished' function.
  $context['results'][] = $file->name . " is opgeslagen bij $feedback." ;
}

/**
 * Image Match Batch 'finished' callback.
 */
function image_match_batch_finished($success, $results, $operations) {
  $messenger = \Drupal::messenger();
  if ($success) {
    // Here we could do something meaningful with the results.
    // We just display the number of nodes we processed...
    $messenger->addMessage(t('@count files processed.', ['@count' => count($results)]));
    $messenger->addMessage(t('The final result was "%final"', ['%final' => end($results)]));
//    ksm($results, 'debug eind resultaat');
  }
  else {
    // An error occurred.
    // $operations contains the operations that remained unprocessed.
    $error_operation = reset($operations);
    $messenger->addMessage(
      t('An error occurred while processing @operation with arguments : @args',
        [
          '@operation' => $error_operation[0],
          '@args' => print_r($error_operation[0], TRUE),
        ]
      )
    );
  }
}

